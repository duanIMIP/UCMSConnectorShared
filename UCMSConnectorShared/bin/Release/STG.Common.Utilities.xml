<?xml version="1.0"?>
<doc>
    <assembly>
        <name>STG.Common.Utilities</name>
    </assembly>
    <members>
        <member name="T:STG.Common.Utilities.Activities.ActivityConfigLoader`1">
            <summary>
            Base class for activity configuration
            <typeparam name="TActivityConfig">Activity configuration type</typeparam>
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Activities.ActivityConfigLoader`1.Initialize(System.IO.Stream)">
            <summary>
            Initializes the activity with stored configuration data.
            This method is called only once after creation.
            </summary>
            <param name="configuration">Specifies a stream with configuration data.</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Activities.ActivityConfigLoader`1.Dispose">
            <summary>
            Releases the resources associated with the current activity.
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Activities.ActivityConfigLoader`1.Dispose(System.Boolean)">
            <summary>
            Releases the resources associated with the current activity.
            </summary>
            <param name="disposeManaged">Specifies if managed resources must be disposed.</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Activities.ActivityConfigLoader`1.Logger">
            <summary>
            Activity logger
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Activities.ActivityConfigLoader`1.ActivityConfiguration">
            <summary>
            Activity configuration
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Activities.ActivityConfigLoader`1.Name">
            <summary>
            Gets  or sets a user-friendly activity name.
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Activities.ActivityConfigLoader`1.ActivityInfo">
            <summary>
            Gets  or sets the activity instance object.
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Activities.ActivityDefinition">
            <summary>
            defines the activity type
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Activities.ActivityDefinition.#ctor(System.Int32,System.String,STG.Common.DTO.DtoActivityExecutionType,System.Boolean)">
            <summary>
            creates a new Activity Definition
            </summary>
            <param name="typeId"></param>
            <param name="implementationName"></param>
            <param name="executionType"></param>
            <param name="mustDispose"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Activities.ActivityDefinition.ActivityTypeIdentifier">
            <summary>
            activity identifier
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Activities.ActivityDefinition.ActivityImplementationName">
            <summary>
            fully qualified name of the activity implementation
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Activities.ActivityDefinition.ExecutionType">
            <summary>
            type of the activity
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Activities.ActivityDefinition.MustDispose">
            <summary>
            notifies that the activity implementation must be disposed after processing
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.ActivityDeployment.ActivityDeploymentHelper">
            <summary>
            Class helps with Activity packages deployment
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.ActivityDeployment.ActivityDeploymentHelper.#ctor(System.String,System.Func{System.IO.Stream})">
            <summary>
            Default constructor
            </summary>
            <param name="outputPath"></param>
            <param name="packageStreamFunction"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.ActivityDeployment.ActivityDeploymentHelper.ValidateAndDeployActivity(STG.Common.DTO.DtoActivityInfo)">
            <summary>
            
            </summary>
            <param name="activityInfo"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.ActivityDeployment.ActivityDeploymentHelper.DeployPackage(System.Boolean)">
            <summary>
            Deploy package to environment
            </summary>        
            <param name="deleteFolder"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.ActivityDeployment.ActivityDeploymentHelper.DeploySubPackage(STG.Common.DTO.DtoPackageType,System.Boolean)">
            <summary>
            Deploy sub-package to environment
            </summary>        
            <param name="deleteFolder"></param>
            <param name="subPackageType"></param>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.ActivityDeployment.ActivityDeploymentHelper.SplitUpPackage(System.Boolean)">
            <summary>
            
            </summary>
            <param name="deployActivities"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.ActivityDeployment.ActivityDeploymentHelper.SplitUpPackage(System.Collections.Generic.IList{STG.Common.DTO.DtoPackageActivity},System.Boolean)">
            <summary>
            
            </summary>
            <param name="selectedActivites"></param>
            <param name="deployActivities"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.ActivityDeployment.ActivityDeploymentHelper.Cleanup">
            <summary>
            Cleans up temp folders
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.ActivityDeployment.ActivityDeploymentHelper.TemporaryPackageFile">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Activities.ActivityImplementationHelper">
            <summary>
            Activity Implementation helper class
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Activities.ActivityImplementationHelper.#ctor">
            <summary>
            Default constructor
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Activities.ActivityImplementationHelper.#ctor(System.Collections.Generic.IList{STG.Common.Interfaces.Activities.IActivityDefinition},System.String)">
            <summary>
            Default constructor
            </summary>      
            <param name="hostedActivities"></param>
            <param name="privateBinPath"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Activities.ActivityImplementationHelper.GetActivityHelper(STG.Common.DTO.DtoActivityInstanceInfo)">
            <summary>
            Gets activityImplementationHelper
            </summary>
            <param name="activityInstance"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Activities.ActivityImplementationHelper.LoadActivityImplementation``1(System.String,STG.Common.DTO.DtoActivityInstanceInfo)">
            <summary>
            Method loads activity implementation
            </summary>
            <typeparam name="T">Type of activity to load</typeparam>
            <param name="activityInstance">Activity instance DTO</param>
            <param name="activityImplementationName">Activity implementation name</param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Activities.ActivityImplementationHelper.LoadAssembly(System.String)">
            <summary>
            Loads assembly
            </summary>
            <param name="libraryName"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Activities.ActivityImplementationHelper.InitializeActivitySettings(STG.Common.Interfaces.Activities.ISTGActivity,STG.Common.DTO.DtoActivityInstanceConfiguration)">
            <summary>
            initialize the activity instance implementation with settings
            </summary>
            <param name="activityInstanceConfig"></param>
            <param name="activityImplementation"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Activities.ActivityImplementationHelper.LoadActivityConfig``1(STG.Common.DTO.DtoDesignerActivity,STG.Common.DTO.DtoActivityInstanceConfiguration)">
            <summary>
            
            </summary>
            <param name="activityInstance"></param>
            <param name="configItem"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Activities.ActivityImplementationHelper.LoadActivityConfig``1(STG.Common.DTO.DtoDesignerActivity,STG.Common.DTO.SerializableDictionary{System.String,System.String},STG.Common.DTO.DtoActivityInstanceConfiguration)">
            <summary>
            
            </summary>
            <param name="activityInstance"></param>
            <param name="variables"></param>
            <param name="configItem"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Activities.ActivityImplementationHelper.ConvertActivityConfig``1(STG.Common.DTO.DtoDesignerActivity,STG.Common.DTO.DtoActivityConfiguration)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Activities.ActivityImplementationHelper.GetActivityConfiguration``1(STG.Common.DTO.DtoDesignerActivity,STG.Common.DTO.DtoActivityInstanceConfiguration)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="activityInstance"></param>
            <param name="configItem"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Activities.ActivityImplementationHelper.GetActivityConfiguration``1(STG.Common.DTO.DtoDesignerActivity,STG.Common.DTO.SerializableDictionary{System.String,System.String},STG.Common.DTO.DtoActivityInstanceConfiguration)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="activityInstance"></param>
            <param name="variables"></param>
            <param name="configItem"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Activities.ActivityImplementationHelper.GetActivityConfigurationObject``1(``0,STG.Common.DTO.DtoActivityInstanceConfiguration)">
            <summary>
            Method returns initialized activity configuration object
            </summary>
            <typeparam name="T"></typeparam>
            <param name="configObject"></param>
            <param name="configItem"></param>
            <introducedIn>1.4</introducedIn>
            <returns></returns>
        </member>
        <member name="M:STG.Common.Utilities.Activities.ActivityImplementationHelper.GetActivityConfigurationXML``1(STG.Common.DTO.DtoDesignerActivity,System.String)">
             <summary>
             
             </summary>
             <typeparam name="T"></typeparam>
             <param name="activityInstance"></param>
            <param name="configJson"></param>
             <returns></returns>
             <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Activities.ActivityImplementationHelper.BinPath">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Activities.ActivityImplementationHelper.HostedActivities">
            <summary>
            Hosted activities
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Activities.Proxy">
            <summary>
            Proxy class for working with different App Domains
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Activities.Proxy.#ctor">
            <summary>
            Default constructor
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Activities.Proxy.CheckAssemblyForInterfaceType(System.String,System.String,System.Type,System.Int32)">
            <summary>
            Method for checking an assembly if it implements the desired type once and not more or less.
            </summary>
            <param name="assemblyPath">Path to the assembly</param>
            <param name="assemblyEntrypointToCheck">entry point to the class to check.</param>
            <param name="interfaceType">The interface type to check for.</param>
            <param name="maxImplementationsCount">The maximum implementations the check has to have. If no limit just assign int.MaxValue.</param>
            <returns>true if the type is implemented once per entrypoint/dll</returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Activities.Proxy.AssemblyResolve(System.Object,System.ResolveEventArgs)">
            <summary>
            Assembly resolve event to load assembly needet for the check into the app domain. The ServicePath property needs to be set before using it.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
            <returns>The requested assembly.</returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Activities.Proxy.BinPath">
            <summary>
            The path to the bin directory
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.AutoExpiryCache`1">
            <summary>
            Cached list of objects of type T that get expired periodically
            </summary>
            <typeparam name="T">Type of objects in the cache</typeparam>
        </member>
        <member name="F:STG.Common.Utilities.AutoExpiryCache`1.SyncRoot">
            <summary>
            Object used for thread synchronization
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.AutoExpiryCache`1.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="cacheName">Cache name</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.AutoExpiryCache`1.SetValue(`0)">
            <summary>
            Add an object to the cache
            </summary>
            <param name="val">The object to add to the cache</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.AutoExpiryCache`1.Expire">
            <summary>
            Expire all objects in the cache
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.AutoExpiryCache`1.Dispose">
            <summary>
            IDisposable implementation
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.AutoExpiryCache`1.Dispose(System.Boolean)">
            <summary>
            IDisposable implementation
            </summary>
            <param name="disposing"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.AutoExpiryCache`1.ValueCache">
            <summary>
            The list of cached objects
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.AutoExpiryCache`1.ExpiryInterval">
            <summary>
            Expiration interval for cached objects
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.AutoExpiryCache`1.ExpiryThreadIsRunning">
            <summary>
            Is the Expiry thread running
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.AutoExpiryCache`1.Count">
            <summary>
            Number od objects in the cache
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.CacheLocator">
            <summary>
            This class provides a framework to manage global services inside an application
            This removes dependencies during initialization and allows to replace specific implementations e.g. for unit tests 
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.CacheLocator.RemoveCacheByRuntimeType(System.Type)">
            <summary>
            Removes a service by type
            </summary>
            <param name="type"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CacheLocator.ReplaceCacheByRuntimeType(System.Type,System.Object)">
            <summary>
            Replaces an existing service instance
            </summary>
            <param name="type"></param>
            <param name="cache"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CacheLocator.AddCache``1(``0)">
            <summary>
            Adds a service instance
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cache"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CacheLocator.GetCache``1">
            <summary>
            Returns the service instance for the specified type
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CacheLocator.RemoveCache``1(``0)">
            <summary>
            Removes the service instance for the specified type
            </summary>
            <typeparam name="T"></typeparam>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CacheLocator.RemoveCache(System.String)">
            <summary>
            Removes the service instance for the specified type name
            </summary>
            <param name="typeName"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.CacheLocator.SyncLock">
            <summary>
            lock object for multi-threading access synchronization
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Cache.BenchmarkData">
            <summary>
            
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.Cache.BenchmarkData.action">
            <summary>
            
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.Cache.BenchmarkData.actionTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.Cache.BenchmarkData.documentID">
            <summary>
            
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.Cache.BenchmarkData.activityInstanceID">
            <summary>
            
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.Cache.BenchmarkData.workITemID">
            <summary>
            
            </summary>
        </member>
        <member name="T:STG.Common.Utilities.Cache.AutoExpirePerformanceLogger">
            <summary>
            
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Cache.AutoExpirePerformanceLogger.GetInstance(System.String)">
            <summary>
            
            </summary>
            <param name="identifier"></param>
            <returns></returns>
        </member>
        <member name="M:STG.Common.Utilities.Cache.AutoExpirePerformanceLogger.Expire">
            <summary>
            
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.Cache.AutoExpirePerformanceLogger.LogIdentifier">
            <summary>
            
            </summary>
        </member>
        <member name="T:STG.Common.Utilities.Cache.AutoExpiryStatusList`1">
            <summary>
            Auto-expiration list for work-item count per activity
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Cache.AutoExpiryStatusList`1.#ctor(System.Int32)">
            <summary>
            Initializes the auto-expiration list by specifying the expiration interval in seconds
            </summary>
            <param name="exparationInterval">Expiration interval in seconds</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Cache.AutoExpiryStatusList`1.Expire">
            <summary>
            Removes all the items from list that are older than expiration interval
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Cache.CachedData">
            <summary>
            keeps activity host cache (per instance)
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.Cache.CachedData._cachedActivityInstances">
            <summary>
            cached initialized activity implementations
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Cache.CachedData.ContainsActivityInstance(System.Int32)">
            <summary>
            Returns if the activity instance is already cached
            </summary>
            <param name="instanceID"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Cache.CachedData.AddActivityImplementationToCache(System.Int32,STG.Common.Interfaces.Activities.ISTGActivity)">
            <summary>
            Adds new activity instance into into cache to cache
            </summary>
            <param name="instanceID">activity instance identifier</param>
            <param name="activityInstance">initialized implementation of activity instance</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Cache.CachedData.GetActivityImplementation(System.Int32)">
            <summary>
            gets the activity instance implementation from cache if exists
            </summary>
            <param name="activityInstanceID">activity instance identifier</param>
            <returns>initialized activity instance implementation</returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Cache.CachedData.RemoveActivityImplementation(System.Int32)">
            <summary>
            remove the activity implementation from cache
            </summary>
            <param name="activityInstanceID">activity instance identifier</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Cache.CachedData.Clear">
            <summary>
            clears the cached activity implementation
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Cache.CachedData.Terminate">
            <summary>
            terminates the cached activity implementations
            </summary>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Claims.ClaimsSearcher">
            <summary>
            helper class for dealing with claims
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Claims.ClaimsSearcher.#ctor(STG.Common.Utilities.Claims.ClaimsSearcher.ClaimSearchScope)">
            <summary>
            The ClaimsSearcher helps to find all possible User and Group scopes in this domain and/or on this machine.
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Claims.ClaimsSearcher.GetAvailableClaims(STG.Common.DTO.DtoResourceSearchOptions)">
            <summary>
            this method returns list of all claims available for the provided user
            Returns all claims that the provided user can find in this environment.
            However, it probably should return all claims that this environment can offer.
            </summary>
            <param name="searchData">defines the search data used to authenticate to the context and filter available data</param>
            <returns></returns>
        </member>
        <member name="P:STG.Common.Utilities.Claims.ClaimsSearcher.Exception">
            <summary>
            If an exception occurs during principal search, it will be recorde
            </summary>
        </member>
        <member name="T:STG.Common.Utilities.Claims.ClaimsSearcher.ClaimSearchScope">
            <summary>
            Defines in which ContextTypes principals are searched.
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.Claims.ClaimsSearcher.ClaimSearchScope.Domain">
            <summary>
            Only search for domain principals
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.Claims.ClaimsSearcher.ClaimSearchScope.Machine">
            <summary>
            Only search for principals of this machine
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.Claims.ClaimsSearcher.ClaimSearchScope.Both">
            <summary>
            Search for principals on both domain and this machine
            </summary>
        </member>
        <member name="T:STG.Common.Utilities.CleanupFileStream">
            <summary>
            Cleanup file stream, automatically deletes file after disposing
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.CleanupFileStream.#ctor(System.String,System.IO.FileMode)">
            <summary>
            Constructor
            </summary>
            <param name="path"></param>
            <param name="fileMode"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CleanupFileStream.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.CleanupFileStream.Filename">
            <summary>
            File name
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.ConfigurationSettingsConstants">
            <summary>
            constant for accessing Configuration settings XML nodes and attributes
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.CONFIG_ACCESS_ROLE">
            <summary>
            name of the runtime access role
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.ACTIVITY_NODE">
            <summary>
            activity node
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.PROCESS_NODE">
            <summary>
            value of the Process node
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.SETTINGS_NODE">
            <summary>
            settings node
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.TIMER_SETTINGS_NODE">
            <summary>
            timer settings node (for time driven activities)
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.TIMER_INTERVAL_NODE">
            <summary>
            time interval node (for time driven activities)
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.ROUTES_NODE">
            <summary>
            routes node
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.ROUTE_NODE">
            <summary>
            route node
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.ACTIVITY_TYPE_ATTRIBUTE">
            <summary>
            activity Type attribute
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.ACTIVITY_INSTANCE_ATTRIBUTE">
            <summary>
            activity instance attribute
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.ACTIVITY_TIMER_PERIOD_ATTRIBUTE">
            <summary>
            activity timer period attribute (for time driven activities)
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.END_ACTIVITY_ATTRIBUTE">
            <summary>
            End activity attribute
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.MERGE_ACTIVITY_ATTRIBUTE">
            <summary>
            merge activity attribute
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.PERSIST_DATA_ATTRIBUTE">
            <summary>
            persist data attribute
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.STOP_TRANSACTION_ATTRIBUTE">
            <summary>
            stop transaction attribute
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.PRIORITY_ATTRIBUTE">
            <summary>
            priority factor attribute 
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.DEFAULT_ROUTE_ATTRIBUTE">
            <summary>
            default route activity instance attribute
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.MULTIPLE_ROUTE_BEHAVIOR">
            <summary>
            multiple route match attribute
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.IS_TIMER_RELATIVE">
            <summary>
            is activity timer interval relative attribute (for time driven activities)
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.TIMER_TIME_UNIT">
            <summary>
            time unit for timer interval attribute (for time driven activities)
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.ACTIVITY_FILTER_ATTRIBUTE">
            <summary>
            activity filter attribute
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.ROUTE_CONDITION_ATTRIBUTE">
            <summary>
            route condition attribute
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.ROUTE_DESTINATION_ATTRIBUTE">
            <summary>
            route destination attribute
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.TIMER_MODE_ATTRIBUTE">
            <summary>
            defines the timer mode attribute
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.TIMER_MODE_CONTINOUS_NODE">
            <summary>
            continuous timer settings
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.TIMER_CONTINUOUS_MODE_ATTRIBUTE">
            <summary>
            continuous mode
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.TIMER_CONTINUOUS_INTERVAL_ATTRIBUTE">
            <summary>
            interval
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.TIMER_CONTINUOUS_START_WITH_HOST_ATTRIBUTE">
            <summary>
            start with host
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.TIMER_CONTINUOUS_BASE_DATETIME_ATTRIBUTE">
            <summary>
            date time 
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.COLLECT_WORK_ITEM_AUDIT_ATTRIBUTE">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.ConfigurationSettingsConstants.COLLECT_DOCUMENT_AUDIT_ATTRIBUTE">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Configuration.ActivityCollection">
            <summary>
            The collection class that will store the list of each element/item that
                   is returned back from the configuration manager.
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Configuration.ActivityCollection.CreateNewElement">
            <summary>
            create a new activity entry
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Configuration.ActivityCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            get activity entry by key
            </summary>
            <param name="element"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Configuration.ActivityCollection.AddElement(STG.Common.Utilities.Configuration.ActivityElement)">
            <summary>
            Adds an element
            </summary>
            <param name="element"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Configuration.ActivityCollection.RemoveElement(STG.Common.Utilities.Configuration.ActivityElement)">
            <summary>
            Removes an element
            </summary>
            <param name="element"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Configuration.ActivityCollection.Clear">
            <summary>
            Clears collection
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.ActivityCollection.Item(System.Int32)">
            <summary>
            get activity entry by index
            </summary>
            <param name="idx"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Configuration.ActivityElement">
            <summary>
            The class that holds onto each element returned by the configuration manager.
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.ActivityElement.Identifier">
            <summary>
            activity identifier
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.ActivityElement.ActivityType">
            <summary>
            type of the activity
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.ActivityElement.ActivityExecutionType">
            <summary>
            type of the activity
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.ActivityElement.ForceDisposal">
            <summary>
            if set to true the activity implementation will get disposed after processing (will not be cached)
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Configuration.ActivityHostElement">
            <summary>
            The class that holds onto each element returned by the configuration manager.
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.ActivityHostElement.HostName">
            <summary>
            name of the host
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.ActivityHostElement.Force32Bit">
            <summary>
            is host 32 bit
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.ActivityHostElement.Activities">
            <summary>
            list of activities hosted in host
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Configuration.HostedActivitiesConfiguration">
            <summary>
            The Class that will have the XML configuration file data loaded into it via the configuration Manager
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.HostedActivitiesConfiguration.Hosts">
            <summary>
            The value of the property here "ActivityHosts" needs to match that of the configuration file section
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Configuration.HostsCollection">
            <summary>
            The collection class that will store the list of each element/item that
                   is returned back from the configuration manager.
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Configuration.HostsCollection.CreateNewElement">
            <summary>
            creates a new configuration element
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Configuration.HostsCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            returns configuration element by key
            </summary>
            <param name="element"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Configuration.HostsCollection.AddElement(STG.Common.Utilities.Configuration.ActivityHostElement)">
            <summary>
            Adds element to collection
            </summary>
            <param name="element"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Configuration.HostsCollection.RemoveElement(STG.Common.Utilities.Configuration.ActivityHostElement)">
            <summary>
            Removes element from collection
            </summary>
            <param name="element"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Configuration.HostsCollection.Clear">
            <summary>
            Clears collection
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.HostsCollection.Item(System.Int32)">
            <summary>
            gets element by index
            </summary>
            <param name="idx"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Configuration.InjectorConfiguration">
            <summary>
            Class used for configuring injections
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.Configuration.InjectorConfiguration.SECTION_NAME">
            <summary>
            Section name
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.InjectorConfiguration.InjectedTypes">
            <summary>
            The value of the property here "InjectedTypes" needs to match that of the configuration file section
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Configuration.InjectorItemsCollection">
            <summary>
            
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.Configuration.InjectorItemsCollection.COLLECTION_NAME">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Configuration.InjectorItemsCollection.CreateNewElement">
            <summary>
            creates a new configuration element
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Configuration.InjectorItemsCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            returns configuration element by key
            </summary>
            <param name="element"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.InjectorItemsCollection.Item(System.Int32)">
            <summary>
            gets element by index
            </summary>
            <param name="idx"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Configuration.InjectedTypeElement">
            <summary>
            Injected element 
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.Configuration.InjectedTypeElement.INTERFACE_PROPERTY">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Configuration.InjectedTypeElement.IMPLEMENTATION_PROPERTY">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Configuration.InjectedTypeElement.IS_GENERIC_PROPERTY">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.InjectedTypeElement.Interface">
            <summary>
            name of the property
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.InjectedTypeElement.Implementation">
            <summary>
            property value
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.InjectedTypeElement.IsGeneric">
            <summary>
            property value
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Configuration.PropertiesCollection">
            <summary>
            The collection class that will store the list of each element/item that
                   is returned back from the configuration manager.
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Configuration.PropertiesCollection.CreateNewElement">
            <summary>
            creates a new configuration element
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Configuration.PropertiesCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            returns configuration element by key
            </summary>
            <param name="element"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.PropertiesCollection.Item(System.Int32)">
            <summary>
            gets element by index
            </summary>
            <param name="idx"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Configuration.PropertyElement">
            <summary>
            The class that holds onto each element returned by the configuration manager.
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.PropertyElement.Name">
            <summary>
            name of the property
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.PropertyElement.Value">
            <summary>
            property value
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.PropertyElement.Activities">
            <summary>
            list of activities hosted in host
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Configuration.StorageInjectorConfiguration">
            <summary>
            The Class that will have the XML configuration file data loaded into it via the configuration Manager
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.StorageInjectorConfiguration.StorageType">
            <summary>
            Storage Implementation Type
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Configuration.StorageInjectorConfiguration.StorageProperties">
            <summary>
            The value of the property here "StorageImplemenationProperties" needs to match that of the configuration file section
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.CustomExtensions">
            <summary>
            keeps the extensions to be used in project
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.AddParameter``1(System.Data.Common.DbCommand,System.String,System.Data.DbType,``0)">
            <summary>
            creates and adds a parameter to command
            </summary>
            <typeparam name="T"></typeparam>
            <param name="command"></param>
            <param name="name"></param>
            <param name="type"></param>
            <param name="value"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.AddParameter``1(System.Data.Common.DbCommand,System.String,System.Data.DbType,``0,System.Int32)">
            <summary>
            creates and adds a parameter to command
            </summary>
            <typeparam name="T"></typeparam>
            <param name="command"></param>
            <param name="name"></param>
            <param name="type"></param>
            <param name="value"></param>
            <param name="size"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.CalculatePeriod(System.DateTime,System.DateTime,System.Int32)">
             <summary>
            Calculate date time from now to due-date by the provided percentage
             </summary>
             <param name="startDate"></param>
             <param name="dueDate"></param>
             <param name="period"></param>
             <returns></returns>
             <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.ConvertToByteArray(System.IO.Stream)">
            <summary>
            converts the stream into byte array
            </summary>
            <param name="stream"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.ReadFully(System.IO.Stream)">
            <summary>
            Reads stream into byte array
            </summary>
            <param name="input"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.ConvertToBase64String(System.String)">
            <summary>
            converts the provided value into a base64 string
            </summary>
            <param name="value"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.ConvertFromBase64String(System.String)">
            <summary>
            converts the provided base64 string into a utf8 encoded string
            </summary>
            <param name="value"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.ConvertToStream(System.Byte[])">
            <summary>
            converts the stream into byte array
            </summary>
            <param name="array"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            selects the item from the provided IEnumerable based on the max value of the selector
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
            selects the item from the provided IEnumerable based on the max value of the selector using the provided comparer
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <param name="comparer"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.Add``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Adds an item to and IEnumerable
            </summary>
            <typeparam name="T"></typeparam>
            <param name="e"></param>
            <param name="value"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.IsInt(System.String)">
            <summary>
            checks if the string can be represented is an integer
            </summary>
            <param name="s"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Creates a distinct method for finding distinct of elements based on a property
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.SerializeObject``1(``0,System.Xml.Serialization.XmlSerializerNamespaces)">
            <summary>
            Serializes an object to XML
            </summary>
            <typeparam name="T"></typeparam>
            <param name="toSerialize"></param>
            <param name="xmlNamespaces"></param>
            <introducedIn>1.3</introducedIn>
            <returns></returns>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.SerializeObjectBinary``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="toSerialize"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.DeserializeObjectBinary``1(System.IO.Stream)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serializedStream"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.SerializeObject``1(``0,STG.Common.Utilities.SerializationType,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
             <summary>
             Serializes object
             </summary>
             <typeparam name="T"></typeparam>
             <param name="toSerialize"></param>
             <param name="useFileStream">Use file stream </param>
            <param name="serializationType">Serializastion type</param>
             <param name="xmlNamespaces">Use XML namespaces</param>
             <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.UnzipStream(System.IO.Stream)">
            <summary>
            Unzips a zipped stream
            </summary>
            <param name="zippedStream"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.ZipStream(System.IO.Stream)">
            <summary>
            Method zips a given stream
            </summary>
            <param name="unzippedStream"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.DeserializeObject``1(System.IO.Stream,STG.Common.Utilities.SerializationType)">
             <summary>
             De-serializes stream to an object
             </summary>
             <typeparam name="T"></typeparam>
             <param name="serializedStream"></param>
            <param name="serializationType"></param>
             <returns></returns>
             <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.DeserializeObject(System.IO.Stream,System.Type,STG.Common.Utilities.SerializationType)">
             <summary>
             De-serializes stream to an object
             </summary>
             <param name="t">Type of return</param>
             <param name="serializedStream"></param>
            <param name="serializationType"></param>
             <returns></returns>
             <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.DeserializeObjectToString(System.IO.Stream)">
            <summary>
            De-serializes stream to an object
            </summary>
            <param name="serializedStream"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.SetCommandTimeout(System.Data.Common.DbCommand,System.Int32)">
            <summary>
            Sets command timeout
            </summary>
            <param name="command"></param>
            <param name="timeout"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.GetResultSynchronous``1(System.Threading.Tasks.Task{``0})">
            <summary>
            Get an async result in synchronous way
            </summary>
            <typeparam name="T">The type to return</typeparam>
            <param name="task">The task to await</param>
            <returns>the result of the task</returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.GetGeneratedQuery(System.Data.Common.DbCommand)">
            <summary>
            
            </summary>
            <param name="dbCommand"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.GetUniqueFlags(System.Enum)">
            <summary>
            
            </summary>
            <param name="flags"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.GenerateStream(System.String)">
            <summary>
            Gets stream from string
            </summary>
            <param name="s"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.GenerateGZippedStream(System.String)">
            <summary>
            Gets GZipped stream from string
            </summary>
            <param name="s"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.CustomExtensions.TryDecrypt(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="sharedSecret"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.SerializationType">
            <summary>
            
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.SerializationType.Json">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.SerializationType.JsonSimple">
            <summary>
            
            </summary>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.SerializationType.Xml">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.SerializationType.Binary">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Database.DateTimeKindAttribute">
            <summary>
            Attribute that specifies the DateTimeKind property of a retrieved DateTime object from database with Entity Framework
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Database.DateTimeKindAttribute.#ctor(System.DateTimeKind)">
            <summary>
            Constructor
            </summary>
            <param name="kind">DateTimeKind enum</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Database.DateTimeKindAttribute.Apply(System.Object)">
            <summary>
            Apply the DateTimeKind to the DateTime object
            </summary>
            <param name="entity">The entity that is retrieved from the database</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Database.DateTimeKindAttribute.Kind">
            <summary>
            DateTimeKind enum
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Database.DbChecker">
            <summary>
            Database checker
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Database.DbChecker.CheckRuntimeDatabaseExists">
            <summary>
            Checks if database exists
            </summary>
            <returns>True if runtime database exists</returns>
        </member>
        <member name="M:STG.Common.Utilities.Database.DbChecker.CheckDatabaseExists(System.String)">
            <summary>
            Checks if database exists
            </summary>
            <param name="connectionString">Connection string</param>
            <returns>True if database exists</returns>
        </member>
        <member name="M:STG.Common.Utilities.Database.DbChecker.CheckRuntimeDatabaseIsValid">
            <summary>
            Checks if runtime database is valid
            </summary>
            <returns>True if runtime database is valid</returns>
        </member>
        <member name="T:STG.Common.Utilities.Database.DbConnectionHelper">
            <summary>
            Class for managing DbConnection
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Database.DbConnectionHelper.LoadConnectionFromConfig(System.String,System.String)">
            <summary>
            Loads connection string from application config file
            </summary>
            <param name="connectionStringKey">Connetion string key</param>
            <param name="provider">Database provider</param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Database.DbConnectionHelper.CreateConnection(System.String,System.Boolean,System.String)">
            <summary>
            Creates database connection from provided connection string
            </summary>
            <param name="connectionString">Connection string</param>
            <param name="supportsMARS">Database supports Multiple Active Result Sets</param>
            <param name="provider">Database provider</param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.DisposeHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.DisposeHandle.#ctor(System.IDisposable[])">
            <summary>
            default constructor
            </summary>
            <param name="objectsToDispose"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DisposeHandle.disposeMembers">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DisposeHandle.Dispose">
            <summary>
            disposable implementation
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.DocumentHelper.BinaryStreamStack">
            <summary>
                Provides character based and byte based stream-like read operations over multiple
                streams and provides methods to add data to the front of the buffer.
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.DocumentHelper.BinaryStreamStack.streams">
            <summary>
                Holds the streams to read from, the stream on the top of the
                stack will be read first.
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.BinaryStreamStack.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:STG.Common.Utilities.DocumentHelper.BinaryStreamStack"/> class with the default.
                encoding of UTF8.
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.BinaryStreamStack.#ctor(System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:STG.Common.Utilities.DocumentHelper.BinaryStreamStack"/> class.
            </summary>
            <param name="encoding">
            The encoding to use for character based operations.
            </param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.BinaryStreamStack.HasData">
            <summary>
                Returns true if there is any data left to read.
            </summary>
            <returns>
                True or false.
            </returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.BinaryStreamStack.Push(System.Byte[])">
            <summary>
            Pushes data to the front of the stack. The most recently pushed data will
                be read first.
            </summary>
            <param name="data">
            The data to add to the stack.
            </param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.BinaryStreamStack.Read">
            <summary>
                Reads a single byte as an integer from the stack. Returns -1 if no
                data is left to read.
            </summary>
            <returns>
                The <see cref="T:System.Byte"/> that was read.
            </returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.BinaryStreamStack.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the specified number of bytes from the stack, starting from a specified point in the byte array.
            </summary>
            <param name="buffer">
            The buffer to read data into.
            </param>
            <param name="index">
            The index of buffer to start reading into.
            </param>
            <param name="count">
            The number of bytes to read into the buffer.
            </param>
            <returns>
            The number of bytes read into buffer. This might be less than the number of bytes requested if that many bytes are not available,
                or it might be zero if the end of the stream is reached.
            </returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.BinaryStreamStack.Read(System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads the specified number of characters from the stack, starting from a specified point in the byte array.
            </summary>
            <param name="buffer">
            The buffer to read data into.
            </param>
            <param name="index">
            The index of buffer to start reading into.
            </param>
            <param name="count">
            The number of characters to read into the buffer.
            </param>
            <returns>
            The number of characters read into buffer. This might be less than the number of bytes requested if that many bytes are not available,
                or it might be zero if the end of the stream is reached.
            </returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.BinaryStreamStack.ReadByteLine(System.Boolean@)">
            <summary>
            Reads a line from the stack delimited by the newline for this platform. The newline
                characters will not be included in the stream
            </summary>
            <param name="hitStreamEnd">
            This will be set to true if we did not end on a newline but instead found the end of
                our data.
            </param>
            <returns>
            The <see cref="T:System.String"/> containing the line.
            </returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.BinaryStreamStack.NextStream">
            <summary>
                Removes the current reader from the stack and ensures it is correctly
                destroyed and then returns the next available reader. If no reader
                is available this method returns null.
            </summary>
            <returns>
                The next <see cref="T:System.IO.BinaryReader">reader</see>.
            </returns>
        </member>
        <member name="P:STG.Common.Utilities.DocumentHelper.BinaryStreamStack.CurrentEncoding">
            <summary>
                Gets or sets the current encoding.
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.DocumentHelper.FilePart">
            <summary>
                Represents a single file extracted from a multipart/form-data
                stream.
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.FilePart.#ctor(System.String,System.String,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:STG.Common.Utilities.DocumentHelper.FilePart"/> class.
            </summary>
            <param name="name">
            The name of the input field used for the upload.
            </param>
            <param name="fileName">
            The name of the file.
            </param>
            <param name="data">
            The file data.
            </param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.FilePart.#ctor(System.String,System.String,System.IO.Stream,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:STG.Common.Utilities.DocumentHelper.FilePart"/> class.
            </summary>
            <param name="name">
            The name of the input field used for the upload.
            </param>
            <param name="fileName">
            The name of the file.
            </param>
            <param name="data">
            The file data.
            </param>
            <param name="contentType">
            The content type.
            </param>
            <param name="contentDisposition">
            The content disposition.
            </param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.DocumentHelper.FilePart.Data">
            <summary>
                Gets the data.
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.DocumentHelper.FilePart.FileName">
            <summary>
                Gets or sets the file name.
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.DocumentHelper.FilePart.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.DocumentHelper.FilePart.ContentType">
            <summary>
                Gets or sets the content-type. Defaults to text/plain if unspecified.
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.DocumentHelper.FilePart.ContentDisposition">
            <summary>
             Gets or sets the content-disposition. Defaults to form-data if unspecified.
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.DocumentHelper.ParameterPart">
            <summary>
                Represents a single parameter extracted from a multipart/form-data
                stream.
            </summary>
            <remarks>
                For our purposes a "parameter" is defined as any non-file data
                in the multipart/form-data stream.
            </remarks>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.ParameterPart.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:STG.Common.Utilities.DocumentHelper.ParameterPart"/> class.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="data">
            The data.
            </param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.DocumentHelper.ParameterPart.Data">
            <summary>
                Gets the data.
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.DocumentHelper.ParameterPart.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.DocumentHelper.MultipartParseException">
            <summary>
                Represents a parsing problem occurring within the MultipartFormDataParser
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.MultipartParseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:STG.Common.Utilities.DocumentHelper.MultipartParseException"/> class.
            </summary>
            <param name="message">
            The message.
            </param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.MultipartParseException.#ctor(System.String,System.Exception)">
            <summary>
             Initializes a new instance of the <see cref="T:STG.Common.Utilities.DocumentHelper.MultipartParseException"/> class.
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.MultipartParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
             Initializes a new instance of the <see cref="T:STG.Common.Utilities.DocumentHelper.MultipartParseException"/> class.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.MultipartParseException.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:STG.Common.Utilities.DocumentHelper.MultipartParseException"/> class.
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.DocumentHelper.MultiPartStreamDataParser">
            <summary>
            Parser for full document streams
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.MultiPartStreamDataParser.ParseRootStream(System.IO.Stream,System.Guid,STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader@)">
            <summary>
            Parses the root stream returned from document service
            </summary>
            <param name="responseStream"></param>
            <param name="rootStreamId"></param>
            <param name="reader"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.MultiPartStreamDataParser.ParseStreamsAsTheyArrive(System.Collections.Generic.IList{STG.Common.DTO.DocumentStreamData},STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader,System.Collections.Concurrent.ConcurrentDictionary{System.String,System.IO.Stream})">
            <summary>
            Parses a stream into a dictionary of guid-stream pairs
            </summary>
            <param name="streamsData"></param>
            <param name="reader"></param>
            <param name="documentStreams"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader">
            <summary>
                Provides methods to interpret and read a stream as either character or binary
                data similar to a <see cref="T:System.IO.BinaryReader"/> and provides the ability to push
                data onto the front of the stream.
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.bufferSize">
            <summary>
                The size of the buffer to use when reading new data.
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.encoding">
            <summary>
                The encoding to use for character based operations
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.stream">
            <summary>
                The stream to read raw data from.
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.streamStack">
            <summary>
                The stream stack to store buffered data.
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader"/> class.
                Default encoding of UTF8 will be used.
            </summary>
            <param name="input">
            The input stream to read from.
            </param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader"/> class.
            </summary>
            <param name="input">
            The input stream to read from.
            </param>
            <param name="encoding">
            The encoding to use for character based operations.
            </param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader"/> class.
            </summary>
            <param name="input">
            The input stream to read from.
            </param>
            <param name="encoding">
            The encoding to use for character based operations.
            </param>
            <param name="bufferSize">
            The buffer size to use for new buffers.
            </param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.Buffer(System.Byte[])">
            <summary>
            Adds data to the front of the stream. The most recently buffered data will
                be read first.
            </summary>
            <param name="data">
            The data to buffer.
            </param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.Buffer(System.String)">
            <summary>
            Adds the string to the front of the stream. The most recently buffered data will
                be read first.
            </summary>
            <param name="data">
            The data.
            </param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.Dispose">
            <summary>
                Closes the stream.
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.Read">
            <summary>
                Reads a single byte as an integer from the stream. Returns -1 if no
                data is left to read.
            </summary>
            <returns>
                The <see cref="T:System.Byte"/> that was read.
            </returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the specified number of bytes from the stream, starting from a
                specified point in the byte array.
            </summary>
            <param name="buffer">
            The buffer to read data into.
            </param>
            <param name="index">
            The index of buffer to start reading into.
            </param>
            <param name="count">
            The number of bytes to read into the buffer.
            </param>
            <returns>
            The number of bytes read into buffer. This might be less than the number of bytes requested if that many bytes are not available,
                or it might be zero if the end of the stream is reached.
            </returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.Read(System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads the specified number of characters from the stream, starting from a
                specified point in the byte array.
            </summary>
            <param name="buffer">
            The buffer to read data into.
            </param>
            <param name="index">
            The index of buffer to start reading into.
            </param>
            <param name="count">
            The number of characters to read into the buffer.
            </param>
            <returns>
            The number of characters read into buffer. This might be less than the number of
                characters requested if that many characters are not available,
                or it might be zero if the end of the stream is reached.
            </returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.ReadByteLine">
            <summary>
                Reads a series of bytes delimited by the byte encoding of newline for this platform.
                the newline bytes will not be included in the return data.
            </summary>
            <returns>
                A byte array containing all the data up to but not including the next newline in the stack.
            </returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.ReadLine">
            <summary>
                Reads a line from the stack delimited by the newline for this platform. The newline
                characters will not be included in the stream
            </summary>
            <returns>
                The <see cref="T:System.String"/> containing the line.
            </returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.GetBomOffset(System.Byte[])">
            <summary>
            Determines the byte order marking offset (if any) from the
                given buffer.
            </summary>
            <param name="buffer">
            The buffer to examine.
            </param>
            <returns>
            The <see cref="T:System.Int32"/> representing the length of the byte order marking.
            </returns>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.StreamData">
            <summary>
                Reads more data from the stream into the stream stack.
            </summary>
            <returns>
                The number of bytes read into the stream stack as an <see cref="T:System.Int32"/>
            </returns>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.HasData">
            <summary>
            check if the stream has data
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.DocumentHelper.RebufferableBinaryReader.BytesRead">
            <summary>
            Bytes read
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.DocumentHelper.StreamHepler">
            <summary>
            Helper class for document service streams
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.DocumentHelper.StreamHepler.DELIMITER">
            <summary>
            Delimiter for streams
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.DocumentHelper.StreamHepler.HEADER_STREAM_DATA">
            <summary>
            Header key for list of stream data
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.DocumentHelper.StreamHepler.MAX_MEDIA_SIZE_DEFAULT">
            <summary>
            Maximum size of media in MB do download
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.DocumentHelper.StreamHepler.MAX_MEDIA_SIZE_CONFIG_KEY">
            <summary>
            Maximum size of media key in config file
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.StreamHepler.CreateDelimiterStream(System.String)">
            <summary>
            Creates a delimiter stream for multiple streams loading
            </summary>
            <param name="streamKey"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.StreamHepler.GetIdFromDelimiterStream(System.Byte[])">
            <summary>
            Gets the stream ID from the delimiter for multiple streams loading
            </summary>
            <param name="delimiter"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.StreamHepler.Locate(System.Byte[],System.Byte[])">
            <summary>
            Locate the binary sequence in a byte array
            </summary>
            <param name="self"></param>
            <param name="candidate"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.StreamHepler.CreateTempFileStream(System.String,System.String,System.String@)">
            <summary>
            Creates a temp directory and file for a stream
            </summary>
            <param name="directoryName"></param>
            <param name="streamKey"></param>
            <param name="streamPath"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.DocumentHelper.StreamHepler.MaxMediaDownloadSize">
            <summary>
            Get the maximum media stream size to load
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.RT.API.Document.StreamType">
            <summary>
            Type of stream for the document service
            </summary>
        </member>
        <member name="F:STG.RT.API.Document.StreamType.Document">
            <summary>
            Document
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.RT.API.Document.StreamType.DocumentType">
            <summary>
            Document type
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.RT.API.Document.StreamType.Media">
            <summary>
            Media
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.DocumentHelper.SubsequenceFinder">
            <summary>
            Provides methods to find a subsequence within a sequence.
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.SubsequenceFinder.#ctor">
            <summary>
            default empty constructor
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.SubsequenceFinder.Search(System.Byte[],System.Byte[],System.Nullable{System.Int64})">
            <summary>
            Finds if a sequence exists within another sequence.
            </summary>
            <remarks>
            This is implemented using the
                <see href="http://en.wikipedia.org/wiki/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm">
                    Knuth-Morris-Pratt
                </see>
                substring algorithm.
            </remarks>
            <param name="haystack">
            The sequence to search
            </param>
            <param name="needle">
            The sequence to look for
            </param>
            <param name="maxLength">
            optional parameter to limit the search length
            </param>
            <returns>
            The start position of the found sequence or -1 if nothing was found
            </returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.SubsequenceFinder.Search2(System.Byte[],System.Byte[],System.Boolean@,System.Int32,System.Int32)">
            <summary>
            Finds if a sequence exists within another sequence.
            </summary>
            <param name="data">
            The sequence to search
            </param>
            <param name="delimiter">
            The sequence to look for
            </param>
            <param name="isEndDelimiter">
            out parameter specifying the end delimiter is found
            </param>
            <param name="start">
            optional parameter to specify the start of the search
            </param>
            <param name="size">
            optional parameter to limit the search length
            </param>
            <returns>
            The start position of the found sequence or -1 if nothing was found
            </returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.DocumentHelper.SubsequenceFinder.GenerateTable(System.Byte[])">
            <summary>
            Generates a table that is used in the Knuth-Morris-Pratt substring algorithm
            </summary>
            <param name="needle">
            The search subsequence to generate a table from
            </param>
            <returns>
            The generated search table
            </returns>
            <see cref="M:STG.Common.Utilities.DocumentHelper.SubsequenceFinder.Search(System.Byte[],System.Byte[],System.Nullable{System.Int64})"/>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.ActivityInitializationException">
            <summary>
            represents exception that occur when activity gets initialized
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.ActivityInitializationException.#ctor">
            <summary>
            default (empty) constructor
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.ActivityInitializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            serialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.ActivityInitializationException.#ctor(System.String)">
            <summary>
            initializes the new exception with specified message
            </summary>
            <param name="message">exception message</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.ActivityInitializationException.#ctor(System.String,System.Exception)">
            <summary>
            initializes the new exception with full exception data
            </summary>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.ActivityProcessingException">
            <summary>
            represents failure occurs during activity execution
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.ActivityProcessingException.#ctor">
            <summary>
            default (empty) constructor
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.ActivityProcessingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            serialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.ActivityProcessingException.#ctor(System.String)">
            <summary>
            initializes the new exception with specified message
            </summary>
            <param name="message">exception message</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.ActivityProcessingException.#ctor(System.String,System.Exception)">
            <summary>
            initializes the new exception with full exception data
            </summary>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.OwinServiceErrorData">
            <summary>
            Data contract class for OWIN Service Errors
            </summary>    
        </member>
        <member name="P:STG.Common.Utilities.Exceptions.OwinServiceErrorData.ExceptionType">
            <summary>
            Exception type
            </summary>    
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Exceptions.OwinServiceErrorData.Message">
            <summary>
            Error message
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Exceptions.OwinServiceErrorData.ExceptionMessage">
            <summary>
            Exception Message
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Exceptions.OwinServiceErrorData.StackTrace">
            <summary>
            Stack trace
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.OwinServiceException">
            <summary>
            Custom exception for server side exceptions
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.OwinServiceException.#ctor">
            <summary>
            Constructor
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.OwinServiceException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">The exception message</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.OwinServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">The exception message</param>
            <param name="innerException">The inner exception</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.OwinServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor
            </summary>
            <param name="serializationInfo">A System.Runtime.Serialization.SerializationInfo that contains the information required to serialize the new ProcessServiceException.</param>
            <param name="streamingContext">A System.Runtime.Serialization.StreamingContext that contains the source of the serialized stream that is associated with the new ProcessServiceException.</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.OwinServiceException.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">ProcessService exception message</param>
            <param name="stackTrace">ProcessService stack trace</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.OwinServiceException.#ctor(System.String,System.Exception,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">The exception message</param>
            <param name="innerException">The inner exception</param>
            <param name="stackTrace">ProcessService stack trace</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.OwinServiceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a System.Runtime.Serialization.SerializationInfo instance with the data needed to serialize the ProcessServiceException.
            </summary>
            <param name="serializationInfo">The System.Runtime.Serialization.SerializationInfo to be used.</param>
            <param name="streamingContext">The System.Runtime.Serialization.StreamingContext to be used.</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Exceptions.OwinServiceException.StackTrace">
            <summary>
            The stack trace from the server exception
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.OwinServiceExceptionHelper">
            <summary>
            OWIN exception helper
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.OwinServiceExceptionHelper.HandleOwinServiceError(System.Net.Http.HttpResponseMessage)">
            <summary>
            Handle OwinServiceErrorData
            </summary>
            <param name="response">The exception data</param>
            <returns>OwinServiceException with inner exception from service.</returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.RESTServiceException">
            <summary>
            Custom exception for REST server side exceptions
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.RESTServiceException.#ctor">
            <summary>
            Constructor
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.RESTServiceException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">The exception message</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.RESTServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">The exception message</param>
            <param name="innerException">The inner exception</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.RESTServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor
            </summary>
            <param name="serializationInfo">A System.Runtime.Serialization.SerializationInfo that contains the information required to serialize the new ProcessServiceException.</param>
            <param name="streamingContext">A System.Runtime.Serialization.StreamingContext that contains the source of the serialized stream that is associated with the new ProcessServiceException.</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.RESTServiceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a System.Runtime.Serialization.SerializationInfo instance with the data needed to serialize the ProcessServiceException.
            </summary>
            <param name="serializationInfo">The System.Runtime.Serialization.SerializationInfo to be used.</param>
            <param name="streamingContext">The System.Runtime.Serialization.StreamingContext to be used.</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.STGApiUnsupportedVersionException">
            <summary>
            Api unsupported exception
            </summary>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.STGException">
            <summary>
            Base class for Giulia exceptions
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGException.#ctor">
            <summary>
            default (empty) constructor
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            serialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGException.#ctor(System.String)">
            <summary>
            initializes the new exception with specified message
            </summary>
            <param name="message">exception message</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGException.#ctor(System.String,System.Exception)">
            <summary>
            initializes the new exception with full exception data
            </summary>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGApiUnsupportedVersionException.#ctor">
            <summary>
            default (empty) constructor
            </summary>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGApiUnsupportedVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            serialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGApiUnsupportedVersionException.#ctor(System.String)">
            <summary>
            initializes the new exception with specified message
            </summary>
            <param name="message">exception message</param>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGApiUnsupportedVersionException.#ctor(System.String,System.Exception)">
            <summary>
            initializes the new exception with full exception data
            </summary>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGApiUnsupportedVersionException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            
            </summary>
            <param name="apiVersion"></param>
            <param name="supportedVersions"></param>
            <param name="message"></param>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGApiUnsupportedVersionException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="apiVersion"></param>
            <param name="supportedVersions"></param>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Exceptions.STGApiUnsupportedVersionException.ApiVersion">
            <summary>
            Current API version
            </summary>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Exceptions.STGApiUnsupportedVersionException.SupportedVersions">
            <summary>
            Supported versions
            </summary>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.STGCommunicationException">
            <summary>
            Exception thrown if something fails during communication with platform services
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGCommunicationException.#ctor">
            <summary>
            default (empty) constructor
            </summary>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGCommunicationException.#ctor(System.String)">
            <summary>
            initializes the new exception with specified message
            </summary>
            <param name="message">exception message</param>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGCommunicationException.#ctor(System.String,System.Exception)">
            <summary>
            initializes the new exception with full exception data
            </summary>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGCommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            serialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.STGDiagramSaveException">
            <summary>
            Exception thrown if something fails during saving of the diagram
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGDiagramSaveException.#ctor">
            <summary>
            default (empty) constructor
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGDiagramSaveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            serialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGDiagramSaveException.#ctor(System.String)">
            <summary>
            initializes the new exception with specified message
            </summary>
            <param name="message">exception message</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGDiagramSaveException.#ctor(System.String,System.Exception)">
            <summary>
            initializes the new exception with full exception data
            </summary>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.STGDocumentConversionException">
            <summary>
            Exception thrown if something fails during conversion of STG document into DTO and vice versa
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGDocumentConversionException.#ctor">
            <summary>
            default (empty) constructor
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGDocumentConversionException.#ctor(System.String)">
            <summary>
            initializes the new exception with specified message
            </summary>
            <param name="message">exception message</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGDocumentConversionException.#ctor(System.String,System.Exception)">
            <summary>
            initializes the new exception with full exception data
            </summary>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGDocumentConversionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            serialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.STGProcessPausedException">
            <summary>
            Exception thrown if trying to perform unsupported operations on a paused process
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGProcessPausedException.#ctor">
            <summary>
            default (empty) constructor
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGProcessPausedException.#ctor(System.String)">
            <summary>
            initializes the new exception with specified message
            </summary>
            <param name="message">exception message</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGProcessPausedException.#ctor(System.String,System.Exception)">
            <summary>
            initializes the new exception with full exception data
            </summary>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGProcessPausedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            serialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.STGClaimsSearchException">
            <summary>
            Exception thrown if search of the claims fails
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGClaimsSearchException.#ctor">
            <summary>
            default (empty) constructor
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGClaimsSearchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            serialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGClaimsSearchException.#ctor(System.String)">
            <summary>
            initializes the new exception with specified message
            </summary>
            <param name="message">exception message</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGClaimsSearchException.#ctor(System.String,System.Exception)">
            <summary>
            initializes the new exception with full exception data
            </summary>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.STGSyncAccessRightsException">
            <summary>
            Exception thrown if something fails during publishing of the process
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGSyncAccessRightsException.#ctor">
            <summary>
            default (empty) constructor
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGSyncAccessRightsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            serialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGSyncAccessRightsException.#ctor(System.String)">
            <summary>
            initializes the new exception with specified message
            </summary>
            <param name="message">exception message</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGSyncAccessRightsException.#ctor(System.String,System.Exception)">
            <summary>
            initializes the new exception with full exception data
            </summary>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGSyncAccessRightsException.#ctor(System.String,System.String)">
            <summary>
            initializes the new exception with specified message
            </summary>
            <param name="progressMessage"></param>
            <param name="message">exception message</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGSyncAccessRightsException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            initializes the new exception with full exception data
            </summary>
            <param name="progressMessage"></param>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGSyncAccessRightsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Getz object data implementation
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Exceptions.STGSyncAccessRightsException.ProgressMessage">
            <summary>
            message to be shown in the publish progress dialog
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.STGServiceStartException">
            <summary>
            Exception thrown if some of STG services can't be started
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGServiceStartException.#ctor">
            <summary>
            default (empty) constructor
            </summary>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGServiceStartException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            serialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGServiceStartException.#ctor(System.String)">
            <summary>
            initializes the new exception with specified message
            </summary>
            <param name="message">exception message</param>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGServiceStartException.#ctor(System.String,System.Exception)">
            <summary>
            initializes the new exception with full exception data
            </summary>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.STGUpgradeProcessException">
            <summary>
            
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGUpgradeProcessException.#ctor">
            <summary>
            default (empty) constructor
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGUpgradeProcessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            serialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGUpgradeProcessException.#ctor(System.String)">
            <summary>
            initializes the new exception with specified message
            </summary>
            <param name="message">exception message</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGUpgradeProcessException.#ctor(System.String,System.Exception)">
            <summary>
            initializes the new exception with full exception data
            </summary>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.STGPublishCancelException">
            <summary>
            exception thrown when user requests cancellation
            </summary>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.STGPublishProcessException">
            <summary>
            Exception thrown if something fails during publishing of the process
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGPublishProcessException.#ctor">
            <summary>
            default (empty) constructor
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGPublishProcessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            serialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGPublishProcessException.#ctor(System.String)">
            <summary>
            initializes the new exception with specified message
            </summary>
            <param name="message">exception message</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGPublishProcessException.#ctor(System.String,System.Exception)">
            <summary>
            initializes the new exception with full exception data
            </summary>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGPublishProcessException.#ctor(System.String,System.String)">
            <summary>
            initializes the new exception with specified message
            </summary>
            <param name="progressMessage"></param>
            <param name="message">exception message</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGPublishProcessException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            initializes the new exception with full exception data
            </summary>
            <param name="progressMessage"></param>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGPublishProcessException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Getz object data implementation
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Exceptions.STGPublishProcessException.ProgressMessage">
            <summary>
            message to be shown in the publish progress dialog
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGPublishCancelException.#ctor">
            <summary>
            initializes the new exception with specified message
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGPublishCancelException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            serialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGPublishCancelException.#ctor(System.String)">
            <summary>
            initializes the new exception with specified message
            </summary>
            <param name="message">exception message</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGPublishCancelException.#ctor(System.String,System.Exception)">
            <summary>
            initializes the new exception with full exception data
            </summary>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGPublishCancelException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Get object data implementation
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Exceptions.STGPublishCancelException.UserRequestedCanellation">
            <summary>
            set to true if user has requested cancellation of the publishing
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Exceptions.STGWorkItemVerificationException">
            <summary>
            Exception thrown if trying to load a document for an invalid work item
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGWorkItemVerificationException.#ctor">
            <summary>
            default (empty) constructor
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGWorkItemVerificationException.#ctor(System.String)">
            <summary>
            initializes the new exception with specified message
            </summary>
            <param name="message">exception message</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGWorkItemVerificationException.#ctor(System.String,System.Exception)">
            <summary>
            initializes the new exception with full exception data
            </summary>
            <param name="message">exception message</param>
            <param name="innerException">inner exception</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Exceptions.STGWorkItemVerificationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            serialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Extensions.CustomExtensions">
            <summary>
            Extensions class
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Extensions.CustomExtensions.GetResult``1(System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage},System.Net.HttpStatusCode@,System.Boolean)">
            <summary>
            Method extends behavior
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="task"></param>
            <param name="statusCode"></param>
            <param name="throwExceptions"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Extensions.CustomExtensions.Clone(System.Net.Http.HttpRequestMessage)">
            <summary>
            
            </summary>
            <param name="contentRequestMessage"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Extensions.CustomExtensions.GetResult``1(System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage})">
            <summary>
            Method extends behaviour
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="task"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Extensions.CustomExtensions.GetStream(System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage},System.Net.HttpStatusCode@,System.Boolean)">
            <summary>
            
            </summary>
            <param name="task"></param>
            <param name="statusCode"></param>
            <param name="throwExceptions"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Extensions.PropertyUtil`1">
            <summary>
            Property utility class
            </summary>
            <typeparam name="TSource"></typeparam>
        </member>
        <member name="M:STG.Common.Utilities.Extensions.PropertyUtil`1.GetPropertyName``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Method gets property name
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="propertyExpression"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Extensions.PropertyUtil`1.GetAttributeValue``2(System.Func{``0,``1})">
            <summary>
            Method gets attribute value
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="valueSelector"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.HashHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.HashHelper.GetSHA1Hash(System.String)">
            <summary>
            Gets a hash of the file using SHA1.
            </summary>
            <param name="filePath"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.HashHelper.GetSHA1Hash(System.IO.Stream)">
            <summary>
            Gets a hash of the file using SHA1.
            </summary>
            <param name="stream"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.HashHelper.GetMD5Hash(System.String)">
            <summary>
            Gets a hash of the file using MD5.
            </summary>
            <param name="filePath"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.HashHelper.GetMD5Hash(System.IO.Stream)">
            <summary>
            Gets a hash of the file using MD5.
            </summary>
            <param name="stream"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.ICache">
            <summary>
            defines a basic cache interface
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.ICache.Name">
            <summary>
            name of the cache
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Injector.DocumentStorageFactory">
            <summary>
            Document storage factory
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Injector.DocumentStorageFactory.GetDocumentStorage(STG.Common.DTO.DTODocumentStorageConnection)">
            <summary>
            
            </summary>
            <param name="storageInfo"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Injector.DocumentStorageFactory.GetDocumentMediaStorage(STG.Common.DTO.DTODocumentStorageConnection)">
            <summary>
            
            </summary>
            <param name="storageInfo"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Injector.InjectionHelper">
            <summary>
            Injection helper
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Injector.InjectionHelper.LoadType``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="T:STG.Common.Utilities.Injector.StorageInjector">
            <summary>
            injects interface implementation to the specified interface
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Injector.StorageInjector.validateRegistrations">
            <summary>
            Method validates service type registrations
            </summary>
            <returns></returns>
        </member>
        <member name="M:STG.Common.Utilities.Injector.StorageInjector.initContainer">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Injector.StorageInjector.copyImplementationIfOnDevSystem(System.String)">
            <summary>
            this will work only if on dev environment.
            copies the latest implementation of the provided storage implementation in execution folder
            </summary>
            <param name="libraryName"></param>
        </member>
        <member name="P:STG.Common.Utilities.Injector.StorageInjector.Container">
            <summary>
            Injector container
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Injector.TypeInjector">
            <summary>
            Type injector
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Injector.TypeInjector.initContainer">
            <summary>
            constructor
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Injector.TypeInjector.Container">
            <summary>
            Injector container
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Interfaces.ISTGHostedService">
            <summary>
            Stg hosted service
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.Interfaces.ISTGHostedService.Service">
            <summary>
            Service reference
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Interfaces.ISTGHostedService.StartedAt">
            <summary>
            Date and time of service start
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Interfaces.ISTGHostedService.ServiceInfo">
            <summary>
            Service information object
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Interfaces.ISTGServiceHost">
            <summary>
            
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.Interfaces.ISTGServiceHost.HostedServices">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.JsonHelper">
            <summary>
            Helper class for Json.NET serialization
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.JsonHelper.GetDefaultJSONSerializerSetting">
            <summary>
            Gets default serialization settings
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.JsonHelper.GetDefaultConverters">
            <summary>
            Gets default JsonConverters
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.JsonHelper.ConvertToJObject(System.String)">
            <summary>
            converts provided json to the equivalent JObject
            </summary>
            <param name="json"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.JsonHelper.SetPropertyValue(System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="json"></param>
            <param name="propName"></param>
            <param name="propValue"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.NativeMethods.LogonUser(System.String,System.String,System.String,STG.Common.Utilities.LogonType,STG.Common.Utilities.LogonProvider,STG.Common.Utilities.OAuth.SafeTokenHandle@)">
            <summary>
            From http://www.pinvoke.net/default.aspx/advapi32.logonuser
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.LogonType.LOGON32_LOGON_INTERACTIVE">
            <summary>
            This logon type is intended for users who will be interactively using the computer, such as a user being logged on  
            by a terminal server, remote shell, or similar process.
            This logon type has the additional expense of caching logon information for disconnected operations; 
            therefore, it is inappropriate for some client/server applications,
            such as a mail server.
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.LogonType.LOGON32_LOGON_NETWORK">
            <summary>
            This logon type is intended for high performance servers to authenticate plaintext passwords.
            The LogonUser function does not cache credentials for this logon type.
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.LogonType.LOGON32_LOGON_BATCH">
            <summary>
            This logon type is intended for batch servers, where processes may be executing on behalf of a user without 
            their direct intervention. This type is also for higher performance servers that process many plaintext
            authentication attempts at a time, such as mail or Web servers. 
            The LogonUser function does not cache credentials for this logon type.
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.LogonType.LOGON32_LOGON_SERVICE">
            <summary>
            Indicates a service-type logon. The account provided must have the service privilege enabled. 
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.LogonType.LOGON32_LOGON_UNLOCK">
            <summary>
            This logon type is for GINA DLLs that log on users who will be interactively using the computer. 
            This logon type can generate a unique audit record that shows when the workstation was unlocked. 
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.LogonType.LOGON32_LOGON_NETWORK_CLEARTEXT">
            <summary>
            This logon type preserves the name and password in the authentication package, which allows the server to make 
            connections to other network servers while impersonating the client. A server can accept plaintext credentials 
            from a client, call LogonUser, verify that the user can access the system across the network, and still 
            communicate with other servers.
            NOTE: Windows NT:  This value is not supported. 
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.LogonType.LOGON32_LOGON_NEW_CREDENTIALS">
            <summary>
            This logon type allows the caller to clone its current token and specify new credentials for outbound connections.
            The new logon session has the same local identifier but uses different credentials for other network connections. 
            NOTE: This logon type is supported only by the LOGON32_PROVIDER_WINNT50 logon provider.
            NOTE: Windows NT:  This value is not supported. 
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.LogonProvider.LOGON32_PROVIDER_DEFAULT">
            <summary>
            Use the standard logon provider for the system. 
            The default security provider is negotiate, unless you pass NULL for the domain name and the user name 
            is not in UPN format. In this case, the default provider is NTLM. 
            NOTE: Windows 2000/NT:   The default security provider is NTLM.
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.OAuth.AuthenticationServiceCalls.GetTokenFromAuthenticationService(System.Security.Principal.IPrincipal,System.String)">
            <summary>
            Method gets token information from authentication service
            </summary>
            <param name="user"></param>
            <param name="token"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.OAuth.AuthenticationToken">
            <summary>
            
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.OAuth.AuthenticationToken.IsExpired">
            <summary>
            
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationToken.ClientId">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationToken.Id">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationToken.TokenType">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationToken.Username">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationToken.Password">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationToken.MachineName">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationToken.ProtectedTicket">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationToken.IssuedUtc">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationToken.ExpiresUtc">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationToken.RefreshToken">
            <summary>
            Refresh token
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.OAuth.AuthenticationTokenRequest">
            <summary>
            
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.OAuth.AuthenticationTokenRequest.ToQueryString">
            <summary>
            
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.OAuth.AuthenticationTokenRequest.ToGrantString">
            <summary>
            
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationTokenRequest.GrantType">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationTokenRequest.Username">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationTokenRequest.Password">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationTokenRequest.ClientId">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationTokenRequest.ClientSecret">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationTokenRequest.MachineName">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationTokenRequest.Token">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.AuthenticationTokenRequest.WinToken">
            <summary>
            The compressed JWT obtained after authenticating with the windows authentication endpoint.
            </summary>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Constants">
            <summary>
            
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.Constants.LOCALHOST_ADDRESS">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.USERNAME">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.PASSWORD">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.MACHINE_NAME">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.AS_CLIENT_ID">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.CLIENT_ID">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.GRANT_TYPE">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.CLIENT_SECRET">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.INVALID_CLIENT_SECRET">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.INVALID_USER_PASSWORD">
            <summary>
            
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.Constants.MISSING_USER_PASSWORD">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.NOT_SAME_CLIENT">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.INVALID_CLIENT_ID">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.AUTHORIZATION_HEADER">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.APPLICATION_JSON">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.FORM_URLENCODED">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.TOKEN">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.WINDOWS_JWT_TOKEN">
            <summary>
            The dictionary keyword for the JWT when using windows authentication with grant_type windows.
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.Constants.REFRESH_TOKEN">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.ACCESS_TOKEN">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.AUTHENTICATION_TOKEN">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.GRANT_TYPE_WINDOWS">
            <summary>
            grant_type value if authentication was done with integrated windows authentication
            </summary>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.GRANT_TYPE_CLIENT_CREDENTIALS">
            <summary>
            grant_type value if authentication is performed with clientId and clientSecret
            </summary>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.CLIENT_CREDENTIALS_JSON_FILE">
            <summary>
            An AppSetting which is used by the authorization service to load client_credential logon users from a json file
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.Constants.ENCRYPTION_SHARED_SECRET_KEY">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Constants.PROCESS_EDITOR_IDENTIFIER">
            <summary>
            
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.Constants.PROCESS_MONITOR_IDENTIFIER">
            <summary>
            
            </summary>
        </member>
        <member name="T:STG.Common.Utilities.OAuth.Crypto">
            <summary>
            Used for encryption and decryption
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.OAuth.Crypto.EncryptStringAES(System.String,System.String)">
            <summary>
            Encrypt the given string using AES.  The string can be decrypted using 
            DecryptStringAES().  The sharedSecret parameters must match.
            </summary>
            <param name="plainText">The text to encrypt.</param>
            <param name="sharedSecret">A password used to generate a key for encryption.</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.OAuth.Crypto.DecryptStringAES(System.String,System.String)">
            <summary>
            Decrypt the given string.  Assumes the string was encrypted using 
            EncryptStringAES(), using an identical sharedSecret.
            </summary>
            <param name="cipherText">The text to decrypt.</param>
            <param name="sharedSecret">A password used to generate a key for decryption.</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.OAuth.Crypto.GetMachinePhrase">
            <summary>
            Method returns machine phrase
            </summary>
            <returns></returns>
        </member>
        <member name="M:STG.Common.Utilities.OAuth.Crypto.GetEnvironmentPhrase">
            <summary>
            Returns environment phrase
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.Crypto.EnvironmentEncryptionKey">
            <summary>
            Environment encryption key
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.Crypto.MachineEncryptionKey">
            <summary>
            Machine encryption key
            </summary>
        </member>
        <member name="T:STG.Common.Utilities.OAuth.InternalClaim">
            <summary>
            Describes what we need from a claim: type and value
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.InternalClaim.Type">
            <summary>
            The type of the claim, corresponds to ystem.Security.Claims.Claim.Type
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.InternalClaim.Value">
            <summary>
            The value of the claim, corresponds to ystem.Security.Claims.Claim.Value
            </summary>
        </member>
        <member name="T:STG.Common.Utilities.OAuth.IntrospectionRequest">
            <summary>
            The request sent to a token introspection endpoint.
            Follows https://tools.ietf.org/html/rfc7662
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.OAuth.IntrospectionRequest.#ctor">
            <summary>
            Initializes a new instance of <c>IntrospectionRequest</c>.
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.IntrospectionRequest.Token">
            <summary>
            A string value for the token
            </summary>
        </member>
        <member name="T:STG.Common.Utilities.OAuth.IntrospectionResponse">
            <summary>
            Contains the authorization server response for an introspection request about an authentication token.
            Follows https://tools.ietf.org/html/rfc7662
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.OAuth.IntrospectionResponse.#ctor">
            <summary>
            Initializes a new instance of <c>IntrospectionRequest</c>.
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.IntrospectionResponse.IsActive">
            <summary>
            Gets or sets a value indicating whether the token is currently active, meaning it is valid and can be used.
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.IntrospectionResponse.ExpirationEpochTime">
            <summary>
            Expiration timestamp of the token.
            Integer timestamp, measured in the number of seconds
            since January 1 1970 UTC, indicating when this token will expire,
            as defined in JWT[RFC7519].
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.IntrospectionResponse.IssuedEpochTime">
            <summary>
            Issuance timestamp of the token.
            Integer timestamp, measured in the number of seconds
            since January 1 1970 UTC, indicating when this token was
            originally issued, as defined in JWT[RFC7519].
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.IntrospectionResponse.Claims">
            <summary>
            A list containing all claims given to this token
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.OAuth.OAuthHelper.LegacyLogonOption">
            <summary>
            App.config Option is called "UseLegacyLogon".
            The option defines whether the old style logon methods should be used or not.
            The new style uses a windowsIdentity to find all claims, the old styles used UserPrincipal.FindByIdentity.
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.OAuth.OAuthHelper.Verify(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="user"></param>
            <param name="password"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.OAuth.OAuthHelper.GetDomainGroups(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="user"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.OAuthHelper.Logger">
            <summary>
            Public setter to a logger, because we are in the wrong assembly to instantiate one ourselves.
            </summary>
        </member>
        <member name="T:STG.Common.Utilities.OAuth.RefreshToken">
            <summary>
            
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.RefreshToken.Id">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.RefreshToken.Subject">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.RefreshToken.ClientId">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.RefreshToken.IssuedUtc">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.RefreshToken.ExpiresUtc">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.RefreshToken.ProtectedTicket">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.OAuth.RefreshTokenRequest">
            <summary>
            
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.OAuth.RefreshTokenRequest.ToQueryString">
            <summary>
            
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.RefreshTokenRequest.GrantType">
            <summary>
            Grant type
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.RefreshTokenRequest.ClientId">
            <summary>
            Client id
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.RefreshTokenRequest.ClientSecret">
            <summary>
            Client secret
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.RefreshTokenRequest.RefreshToken">
            <summary>
            Refresh token
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.OAuth.STGLoginProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.OAuth.STGLoginProvider.Login(System.String,System.String)">
            <summary>
            Returns user groups
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:STG.Common.Utilities.OAuth.STGLoginProvider.GetUserGroups(System.String,System.String)">
            <summary>
            Returns user groups
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="T:STG.Common.Utilities.OAuth.Token">
            <summary>
            
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.Token.Id">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.Token.Subject">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.Token.ClientId">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.Token.IssuedUtc">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.Token.ExpiresUtc">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.Token.ProtectedTicket">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.Token.Username">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.Token.Password">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.OAuth.Token.MachineName">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.OEM.DevOEM">
            <summary>
            Dev implementation of the OEM
            </summary>
        </member>
        <member name="T:STG.OEM.IGiuliaOEM">
            <summary>
            OEM interface for the Giulia windows applications
            </summary>
        </member>
        <member name="M:STG.OEM.IGiuliaOEM.GetServiceName(STG.OEM.ServiceHostType)">
            <summary>
            Gets the name of the Service Host (Windows Service)
            </summary>
            <param name="svcType"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.OEM.IGiuliaOEM.GetServiceDisplayName(STG.OEM.ServiceHostType)">
            <summary>
            Gets the display name of the windows service
            </summary>
            <param name="svcType"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.OEM.IGiuliaOEM.GetRESTServiceDescription(STG.OEM.ServiceType)">
            <summary>
            Gets the Rest service description
            </summary>
            <param name="svcType"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.OEM.IGiuliaOEM.GetOEMName">
            <summary>
            Gets the OEM name
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.OEM.IGiuliaOEM.GetVendorName">
            <summary>
            Gets the vendor name
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.OEM.DevOEM.GetServiceName(STG.OEM.ServiceHostType)">
            <summary>
            Gets the name of the Service Host (Windows Service)
            </summary>
            <param name="svcType"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.OEM.DevOEM.GetServiceDisplayName(STG.OEM.ServiceHostType)">
            <summary>
            Gets the description of the windows service
            </summary>
            <param name="svcType"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.OEM.DevOEM.GetRESTServiceDescription(STG.OEM.ServiceType)">
            <summary>
            Gets the Rest service description
            </summary>
            <param name="svcType"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.OEM.DevOEM.GetOEMName">
            <summary>
            
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.OEM.DevOEM.GetVendorName">
            <summary>
            
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.OEM.ServiceHostType">
            <summary>
            Service Host types
            </summary>
        </member>
        <member name="F:STG.OEM.ServiceHostType.RuntimeHost">
            <summary>
            runtime
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.OEM.ServiceHostType.DesignTimeHost">
            <summary>
            Design Time
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.OEM.ServiceHostType.ActivityLauncher">
            <summary>
            Activity Launcher
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.OEM.ServiceType">
            <summary>
            REST service type
            </summary>
        </member>
        <member name="F:STG.OEM.ServiceType.None">
            <summary>
            No service
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.OEM.ServiceType.Process">
            <summary>
            Process Service
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.OEM.ServiceType.Configuration">
            <summary>
            Configuration service
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.OEM.ServiceType.Document">
            <summary>
            Document Service
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.OEM.ServiceType.Design">
            <summary>
            Designer service
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.OEM.ServiceType.ProcessMonitor">
            <summary>
            Process Monitor Web Application
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.OEM.ServiceType.SystemMonitorService">
            <summary>
            System Monitor Service
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.OEM.ServiceType.ThinDocument">
            <summary>
            Thin Client Document Service
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.OEM.ServiceType.Authentication">
            <summary>
            Authentication service
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.OEM.ServiceType.WindowsAuthentication">
            <summary>
            Authentication service
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.OEM.ServiceType.ActivityLauncher">
            <summary>
            Activity launcher
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.OEM.OEMLoader">
            <summary>
            Loader for OEM library
            </summary>
        </member>
        <member name="M:STG.OEM.OEMLoader.LoadCustomOEMInterface">
            <summary>
            loads the OEM Interface
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.OEM.OEMLoader.LoadCustomOEMInterface(System.String)">
            <summary>
            loads the OEM interface from abstract file
            </summary>
            <param name="dllPath"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Package.PackageCreationHelper">
            <summary>
            Helper used to create process package
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Package.PackageCreationHelper.AddProcessThumbnail(STG.Common.DTO.DtoStoredFile,System.String,System.IO.Compression.ZipArchive)">
            <summary>
            
            </summary>
            <param name="processThumbnail"></param>
            <param name="processName"></param>
            <param name="zipFile"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Package.PackageCreationHelper.CreateOnePixImage">
            <summary>
            
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Package.PackageCreationHelper.AddPackageMetaData(STG.Common.DTO.DtoProcessExport,System.IO.Compression.ZipArchive)">
            <summary>
            
            </summary>
            <param name="dtoProcessExport"></param>
            <param name="zipFile"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Package.PackageLoadingHelper">
            <summary>
            Helper used to load process package
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Package.PackageLoadingHelper.GetActivityConfigurations(System.IO.Compression.ZipArchive)">
            <summary>
            Get activity configurations from package
            </summary>
            <param name="zipArchive"></param>
            <returns></returns>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Package.PackageLoadingHelper.GetVariableConfigurations(System.IO.Compression.ZipArchive)">
            <summary>
            Get variable configurations from package
            </summary>
            <param name="zipArchive"></param>
            <returns></returns>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.ProcessHelper">
            <summary>
            Provides process status information based on performance counters
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.ProcessHelper.GetStatusInformation(System.Diagnostics.Process)">
            <summary>
            Returns resource status information
            </summary>
            <param name="process"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.Properties.Resources.onepix">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:STG.Common.Utilities.Publish.PublishHelper">
            <summary>
            Defines helper methods for publishing
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Publish.PublishHelper.GetPublishSteps">
            <summary>
            initializes the publish steps
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.JsonGenericDictionaryOrArrayConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.JsonGenericDictionaryOrArrayConverter.CanConvert(System.Type)">
            <summary>
            
            </summary>
            <param name="objectType"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.JsonGenericDictionaryOrArrayConverter.ReadJsonGeneric``2(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.JsonGenericDictionaryOrArrayConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.JsonGenericDictionaryOrArrayConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.JsonGenericDictionaryOrArrayConverter.CanWrite">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.TypeExtensions">
            <summary>
            Type extensions
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.TypeExtensions.GetInterfacesAndSelf(System.Type)">
            <summary>
            Return all interfaces implemented by the incoming type as well as the type itself if it is an interface.
            </summary>
            <param name="type"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.TypeExtensions.GetDictionaryKeyValueTypes(System.Type)">
            <summary>
            Gets Dictionary KeyValue types
            </summary>
            <param name="type"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Services.ConfigurationHelper">
            <summary>
            Helper class to load information from app/web config files
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Services.ConfigurationHelper.GetServiceEndPoint(System.String,System.Int32)">
            <summary>
            Method returns service address based on name from configuration
            </summary>
            <param name="serviceName">Name of the service</param>
            <param name="defaultPort">Default port</param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Services.ConfigurationHelper.GetServiceEndPoint(System.Configuration.KeyValueConfigurationCollection,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="appSettings"></param>
            <param name="serviceName"></param>
            <param name="defaultPort"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Services.ConfigurationHelper.GetServicePort(System.Configuration.KeyValueConfigurationCollection,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="appSettings"></param>
            <param name="serviceName"></param>
            <param name="defaultPort"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Services.ConfigurationHelper.GetServiceEndPoint(System.Collections.Specialized.NameValueCollection,System.String,System.Int32)">
            <summary>
            Method returns service address based on name from appsettings
            </summary>
            <param name="appSettings">Application settings to read</param>
            <param name="serviceName">Name of the service</param>
            <param name="defaultPort">Default port</param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Services.ConfigurationHelper.GetServiceHostname(System.String)">
            <summary>
            
            </summary>
            <param name="serviceName"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Services.ConfigurationHelper.GetServiceHostname(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            
            </summary>
            <param name="appSettings"></param>
            <param name="serviceName"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Services.ConfigurationHelper.GetServicePort(System.Collections.Specialized.NameValueCollection,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="appSettings"></param>
            <param name="serviceName"></param>
            <param name="defaultPort"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Services.ConfigurationHelper.GetServiceAddress(System.Configuration.Configuration,System.String)">
            <summary>
            
            </summary>
            <param name="config"></param>
            <param name="serviceName"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Services.ConfigurationHelper.GetServicePort(System.Configuration.Configuration,System.String,System.Int32)">
            <summary>
            Method returns service port based on name from appsettings
            </summary>
            <param name="config">Configuration element</param>
            <param name="serviceName">Name of the service</param>
            <param name="defaultPort">Default port</param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Services.ServiceConstants">
            <summary>
            Service Constants
            </summary>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_CONTENT_TYPE">
            <summary>
            content-type
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_CONTENT_DISPOSITION">
            <summary>
            content-disposition
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_ACCESS_CONTROL_ALLOW_ORIGIN">
            <summary>
            access-control-allow-origin
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_ACCESS_CONTROL_ALLOW_CREDENTIALS">
            <summary>
            access-control-allow-credentials
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_ACCESS_CONTROL_ALLOW_HEADERS">
            <summary>
            access-control-allow-headers
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_ACCESS_CONTROL_ALLOW_METHODS">
            <summary>
            access-control-allow-methods
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_STG_DTO">
            <summary>
            stg-dto
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_STG_DTO_TYPE">
            <summary>
            stg-dtotype
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_STG_SIZE">
            <summary>
            stg-size
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_STG_TOC_LENGTH">
            <summary>
            stg-toc-length
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_STG_PROCESS_MONITOR">
            <summary>
            stgrtprocmon
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_WORK_ITEM_DATA">
            <summary>
            workitemdata
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_MEDIA_NAME">
            <summary>
            medianame
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_MEDIA_TYPE">
            <summary>
            mediatype
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_MEDIA_EXTENSION">
            <summary>
            mediaextension
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_AUTHORIZATION">
            <summary>
            authorization
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_ATTACHMENT">
            <summary>
            attachment
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="F:STG.Common.Utilities.Services.ServiceConstants.HEADER_FORM_DATA">
            <summary>
            form-data
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Services.STGServiceHelper">
            <summary>
            STG Service helper
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Services.STGServiceHelper.#ctor">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Services.STGServiceHelper.GetServiceName(STG.OEM.ServiceType,System.Text.StringBuilder,System.Boolean)">
            <summary>
            Gets service name
            </summary>
            <param name="runServiceType"></param>
            <param name="sb"></param>
            <param name="useShortNames"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Services.STGServiceHelper.GetServiceName(STG.OEM.ServiceHostType,STG.OEM.ServiceType)">
            <summary>
            service name
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Services.STGServiceHelper.GetServiceDisplayName(STG.OEM.ServiceHostType,STG.OEM.ServiceType)">
            <summary>
            Service Display Name (Changes depending on hosted REST services)
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Services.STGServiceHelper.GetServiceDescription(STG.OEM.ServiceType)">
            <summary>
            Service Description (Changes depending on hosted REST services)
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Services.STGServiceHelper.GetAssemblyInformation">
            <summary>
            Method gets assembly information
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.Services.STGServiceHelper.RemoveLast(System.Text.StringBuilder,System.String)">
            <summary>
            
            </summary>
            <param name="sb"></param>
            <param name="value"></param>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Services.STGServiceHelper.OEM">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Services.STGServiceHelper.Instance">
            <summary>
            Singleton instance
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Services.STGServiceHelper.ServiceInfos">
            <summary>
            Services informations
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.Services.STGServiceInfo">
            <summary>
            Service info class
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.Services.STGServiceInfo.CheckService(System.String@)">
            <summary>
            Checks if provided service is alive and responding to requests
            </summary>
            <param name="message">Message in case of error</param>
            <returns>True if service is alive and responding</returns>
            <introducedIn>1.4</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Services.STGServiceInfo.Type">
            <summary>
            Service type
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Services.STGServiceInfo.Name">
            <summary>
            Service name
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Services.STGServiceInfo.ShortName">
            <summary>
            Service short name
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Services.STGServiceInfo.Description">
            <summary>
            Service description
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Services.STGServiceInfo.ServiceSwitch">
            <summary>
            Service switch
            <introducedIn>1.3</introducedIn>
            </summary>
        </member>
        <member name="P:STG.Common.Utilities.Services.STGServiceInfo.ServiceSwitchDescription">
            <summary>
            Service switch
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Services.STGServiceInfo.ServiceDefaultPort">
            <summary>
            Service default port
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Services.STGServiceInfo.Port">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Services.STGServiceInfo.Hostname">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Services.STGServiceInfo.StartupType">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Services.STGServiceInfo.ApiAppendix">
            <summary>
            Api appendix
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.Services.STGServiceInfo.ServiceAddress">
            <summary>
            Gets the service url, e.g. http://configserviceHost:8090/
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.StreamDisposableHandle">
            <summary>
            Handle to use when returning streams from DB
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.StreamDisposableHandle.#ctor(System.IO.Stream,System.IDisposable[])">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <param name="objectsToDispose"></param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.StreamDisposableHandle.Dispose">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="P:STG.Common.Utilities.StreamDisposableHandle.Stream">
            <summary>
            
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="T:STG.Common.Utilities.WCFInterfaces.IActivityHostProcess">
            <summary>
            This is the remote interface to the activity host process.
            </summary>
        </member>
        <member name="M:STG.Common.Utilities.WCFInterfaces.IActivityHostProcess.Shutdown">
            <summary>
            Signals to the process to terminate
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.WCFInterfaces.IActivityHostProcess.StartHostedActivitiesProcessing(System.Collections.Generic.IList{STG.Common.Utilities.Activities.ActivityDefinition})">
            <summary>
            Starts processing of all hosted activities
            </summary>
            <param name="hostedActivities">Specifies activities hosted in this activity host.</param>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.WCFInterfaces.IActivityHostProcess.Ping">
            <summary>
            Simple function to test if the process is already running
            </summary>
            <introducedIn>1.3</introducedIn>
        </member>
        <member name="M:STG.Common.Utilities.WCFInterfaces.IActivityHostProcess.Status">
            <summary>
            Simple method to return activity host status
            </summary>
            <returns></returns>
            <introducedIn>1.3</introducedIn>
        </member>
    </members>
</doc>
